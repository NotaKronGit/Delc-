using System;
using System.Collections.Generic;
using System.Data.SqlServerCe;
using System.Drawing;
using System.Windows.Forms;
using System.Xml.Linq;
namespace Decl
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        private static List<producer> prod;
        private static List<importer> importLs;
        private static List<supply> supl;
        private static int headerColumnIndex;
#pragma warning disable CS0414 // Полю "Form1.upLoadToDb" присвоено значение, но оно ни разу не использовано.
        private static bool upLoadToDb = false;
#pragma warning restore CS0414 // Полю "Form1.upLoadToDb" присвоено значение, но оно ни разу не использовано.
        private static string password_sdf = "7338a7e6-fd3b-49d1-8d90-ddbbc1b39fa1";
        private static SqlCeConnection conn = null;

        private void button1_Click(object sender, EventArgs e)
        {
            tabControl1.TabPages.Clear();
            label1.Text = "";
            string path;
            OpenFileDialog Fd = new OpenFileDialog();

            Fd.Title = "Выберете файл с деклорацией";
            Fd.InitialDirectory = @"C:\";
            Fd.Filter = "файлы делораций(xml)|*.xml";
            if (Fd.ShowDialog() == DialogResult.OK)
            {
                prod = null;
                importLs = null;
                supl = null;
                path = Fd.FileName;
                checkBox1.Visible = true;
                checkBox1.Checked = false;
                label2.Visible = true;
                XDocument xdoc = XDocument.Load(path);
                prod = new List<producer>();
                importLs = new List<importer>();
                supl = new List<supply>();
                List<producer> findProd = new List<producer>();
                string dateDoc = xdoc.Element("Файл").Attribute("ДатаДок").Value;
                string period = "";
                switch (xdoc.Element("Файл").Element("ФормаОтч").Attribute("ПризПериодОтч").Value)
                {
                    case "0":
                        period = "4 квартал " + xdoc.Element("Файл").Element("ФормаОтч").Attribute("ГодПериодОтч").Value + " год.";
                        break;
                    case "3":
                        period = "1 квартал " + xdoc.Element("Файл").Element("ФормаОтч").Attribute("ГодПериодОтч").Value + " год.";
                        break;
                    case "6":
                        period = "2 квартал " + xdoc.Element("Файл").Element("ФормаОтч").Attribute("ГодПериодОтч").Value + " год.";
                        break;
                    case "9":
                        period = "3 квартал " + xdoc.Element("Файл").Element("ФормаОтч").Attribute("ГодПериодОтч").Value + " год.";
                        break;
                }
                foreach (XElement prodElement in xdoc.Element("Файл").Element("Справочники").Elements("ПроизводителиИмпортеры"))
                {

                    if (prodElement.Element("ЮЛ") != null)
                    {
                        string producerINN = null;
                        string producerKPP = null;
                        if (prodElement.Element("ЮЛ").Attribute("П000000000005") != null)
                            producerINN = prodElement.Element("ЮЛ").Attribute("П000000000005").Value;
                        else
                            producerINN = "-------";
                        if (prodElement.Element("ЮЛ").Attribute("П000000000006") != null)
                            producerKPP = prodElement.Element("ЮЛ").Attribute("П000000000006").Value;
                        else
                            producerKPP = "---------";
                        prod.Add(new producer()
                        {
                            Id = Convert.ToInt32(prodElement.Attribute("ИДПроизвИмп").Value),
                            Name = prodElement.Attribute("П000000000004").Value,
                            INN = producerINN,
                            KPP = producerKPP,
                        });
                    }
                    else
                    {
                        string producerINN = null;
                        string producerKPP = null;
                        if (prodElement.Attribute("П000000000005") != null)
                            producerINN = prodElement.Attribute("П000000000005").Value;
                        else
                            producerINN = "-------";
                        if (prodElement.Attribute("П000000000006") != null)
                            producerKPP = prodElement.Attribute("П000000000006").Value;
                        else
                            producerKPP = "---------";
                        prod.Add(new producer()
                        {
                            Id = Convert.ToInt32(prodElement.Attribute("ИДПроизвИмп").Value),
                            Name = prodElement.Attribute("П000000000004").Value,
                            INN = producerINN,
                            KPP = producerKPP,
                        });
                    }
                }



                foreach (XElement prodElement in xdoc.Element("Файл").Element("Справочники").Elements("Поставщики"))
                {

                    importLs.Add(new importer()
                    {
                        Id = Convert.ToInt32(prodElement.Attribute("ИдПостав").Value),
                        Name = prodElement.Attribute("П000000000007").Value,
                        INN = prodElement.Element("ЮЛ").Attribute("П000000000009").Value,
                        KPP = prodElement.Element("ЮЛ").Attribute("П000000000010").Value,
                    });
                }



                int tabPagesCount = 0;
                foreach (XElement moveElement in xdoc.Element("Файл").Element("Документ").Elements("ОбъемОборота"))
                {
                    tabControl1.TabPages.Add("NewTab" + tabPagesCount.ToString());
                    Label l1 = new Label();
                    l1.Width = tabPage1.Width - 50;
                    l1.Name = "label";
                    string sobst = moveElement.Attribute("Наим").Value;
                    if (moveElement.Attribute("КППЮЛ") != null)
                    {
                        sobst += "  /  " + moveElement.Attribute("КППЮЛ").Value;
                    }
                    l1.Text = sobst;
                    l1.Location = new Point(tabControl1.Location.X - 10, tabControl1.Location.Y - 40);
                    tabControl1.TabPages[tabPagesCount].Controls.Add(l1);
                    string check = moveElement.Attribute("НаличиеОборота").Value;
                    if (check.Equals("true"))
                    {
                        string test = moveElement.Element("Оборот").Attribute("П000000000003").Value;
                        tabControl1.TabPages[tabPagesCount].Controls.Add(createTable(Convert.ToInt32(test), moveElement));
                    }
                    else
                    {
                        Label l2 = new Label();
                        l2.Width = tabPage1.Width - 50;
                        l2.Name = "label";
                        l2.Text = "Движения по данному подразделению за " + period + " не было!!";
                        l2.Location = new Point(tabControl1.Location.X - 10, tabControl1.Location.Y - 15);
                        l2.ForeColor = Color.Red;
                        tabControl1.TabPages[tabPagesCount].Controls.Add(l2);
                    }
                    // tabControl1.TabPages[tabPagesCount].Controls.Add(new RichTextBox() { Text = "NewRichTextBox" + tabPagesCount.ToString(), Top = (26), Dock = System.Windows.Forms.DockStyle.Fill });
                    tabPagesCount++;

                }
                tabControl1.SelectedIndex = 1;
                label1.Text = "Дата документа: " + dateDoc + " Отчетность за " + period;
                tabPage1.Parent = null;
            }


        }


        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private DataGridView createTable(int kod, XElement xmlParse)
        {
            DataGridView dgv = new DataGridView();

            if (kod == 500)
            {
                dgv = createPivoTable(xmlParse);
            }
            else
            {
                dgv = createAlcoTable(xmlParse);
            }
            dgv.Location = new Point(tabControl1.Location.X - 10, tabControl1.Location.Y - 15);
            return dgv;
        }
        private DataGridView createPivoTable(XElement xmlParse)
        {
            DataGridView dgv = new DataGridView();
            //dgv.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            dgv.Columns.Add("col1", "Код вида");
            dgv.Columns.Add("col2", "Производитель");
            dgv.Columns.Add("col3", "Остаток на  начало");
            dgv.Columns.Add("col4", "Закупки у пр-й");
            dgv.Columns.Add("col5", "Закупки - опт");
            dgv.Columns.Add("col6", "закупки -импорт");
            dgv.Columns.Add("col7", "закупки итого");
            dgv.Columns.Add("col8", "Возврат от пок-й");
            dgv.Columns.Add("col9", "Прочее пост-е");
            dgv.Columns.Add("col10", "Поступление всего");
            dgv.Columns.Add("col11", "Розничная продажа");
            dgv.Columns.Add("col12", "Прочий расход");
            dgv.Columns.Add("col13", "возврат поставщику");
            dgv.Columns.Add("col14", "расход всего");
            dgv.Columns.Add("col15", "Остаток на конец периода");
            dgv.Columns.Add("imp", "importer");
            dgv.Columns.Add("idProduce", "Produce");
            dgv.Columns.Add("sob", "sob");
            dgv.Columns["imp"].Visible = false;
            dgv.Columns["idProduce"].Visible = false;
            dgv.Columns["sob"].Visible = false;

            dgv.Name = "dataGridView50";
            dgv.Width = tabControl1.Width - 10;
            dgv.Height = tabControl1.Height - dgv.Rows[0].Height * 5;

            dgv.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;

            //dgv.Size = new System.Drawing.Size(300, 300);
            dgv.RowTemplate.ReadOnly = true;
            dgv.AllowUserToAddRows = false;
            dgv.AllowUserToDeleteRows = false;
            dgv.AllowDrop = false;
            dgv.GridColor = Color.DarkOrange;
            dgv.Anchor = (AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right | AnchorStyles.Bottom);
            //dgv.Font = new System.Drawing.Font("Verdana", 9, FontStyle.Bold);
            dgv.ColumnHeadersHeight = 40;
            dgv.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;
            dgv.ColumnHeadersDefaultCellStyle.Font = new System.Drawing.Font("Verdana", 9, FontStyle.Bold);
            dgv.RowHeadersDefaultCellStyle.Font = new System.Drawing.Font("Verdana", 9, FontStyle.Bold);

            ContextMenuStrip m = new ContextMenuStrip();
            ToolStripMenuItem delColumn = new ToolStripMenuItem("Скрыть столбец");
            ToolStripMenuItem resAll = new ToolStripMenuItem("Восстановить все");
            delColumn.Click += delColumn_Click;
            m.Items.AddRange(new[] { delColumn, resAll });
            dgv.ContextMenuStrip = m;

            dgv.ColumnHeaderMouseClick += new DataGridViewCellMouseEventHandler(dgv_ColumnHeaderMouseClick);
            dgv.CellEnter += new DataGridViewCellEventHandler(dgv_CellEnter);

            foreach (XElement moveElement in xmlParse.Elements("Оборот"))
            {
                string kod = moveElement.Attribute("П000000000003").Value;
                foreach (XElement sales in moveElement.Elements("СведПроизвИмпорт"))
                {
                    string imp = "0";
                    string proizv = getPordName(sales.Attribute("ИдПроизвИмп").Value);
                    string sobst = xmlParse.Attribute("Наим").Value;
                    if (xmlParse.Attribute("КППЮЛ") != null)
                    {
                        sobst += "  /  " + xmlParse.Attribute("КППЮЛ").Value;
                    }
                    if (sales.Element("Поставщик") != null)
                    {
                        foreach (XElement supply in sales.Elements("Поставщик"))
                        {
                            imp = supply.Attribute("ИдПоставщика").Value;
                            setSupply(Convert.ToInt32(kod), Convert.ToInt32(sales.Attribute("ИдПроизвИмп").Value), sobst, supply);
                        }
                    }
                    string pn = sales.Element("Движение").Attribute("П100000000006").Value;
                    dgv.Rows.Add(kod, proizv
                      , sales.Element("Движение").Attribute("П100000000006").Value
                      , sales.Element("Движение").Attribute("П100000000007").Value
                      , sales.Element("Движение").Attribute("П100000000008").Value
                      , sales.Element("Движение").Attribute("П100000000009").Value
                      , sales.Element("Движение").Attribute("П100000000010").Value
                      , sales.Element("Движение").Attribute("П100000000011").Value
                      , sales.Element("Движение").Attribute("П100000000012").Value
                      , sales.Element("Движение").Attribute("П100000000013").Value
                      , sales.Element("Движение").Attribute("П100000000014").Value
                      , sales.Element("Движение").Attribute("П100000000015").Value
                      , sales.Element("Движение").Attribute("П100000000016").Value
                      , sales.Element("Движение").Attribute("П100000000017").Value
                      , sales.Element("Движение").Attribute("П100000000018").Value
                      , imp
                      , sales.Attribute("ИдПроизвИмп").Value
                      , sobst);
                }
            }

            return dgv;
        }
        private DataGridView createAlcoTable(XElement xmlParse)
        {
            DataGridView dgv = new DataGridView();
            //dgv.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            dgv.Columns.Add("col1", "Код вида");
            dgv.Columns.Add("col2", "Производитель");
            dgv.Columns.Add("col3", "Остаток на  начало");
            dgv.Columns.Add("col4", "Поступление от производителей");
            dgv.Columns.Add("col5", "Поступление от  оптовиков");
            dgv.Columns.Add("col6", "Поступление по импорту");
            dgv.Columns.Add("col7", "закупки итого");
            dgv.Columns.Add("col8", "Возврат от покупателейй");
            dgv.Columns.Add("col9", "Прочее поступлениее");
            dgv.Columns.Add("col10", "перемещение");
            dgv.Columns.Add("col11", "Поступле